7.1.1
n = [1, 3, 5]

# Add your code below
print n[1]

7.1.2
n = [1, 3, 5]
# Do your multiplication here
n[1] = n[1] * 5

print n

7.1.3
n = [1, 3, 5]
# Append the number 4 here
n.append(4)
print n

7.1.4
n = [1, 3, 5]
# Remove the first item in the list here
#n.pop(0)
#n.remove(1)
del(n[0])
print n

7.1.5
number = 5

def my_function(x):
    return x * 3

print my_function(number)

7.1.6
m = 5
n = 13
# Add add_function here!
def add_function(x, y):
    return x + y


print add_function(m, n)

7.1.7

n = "Hello"
# Your function here!
def string_function(s):
    return s + 'world'


print string_function(n)

7.1.8
def list_function(x):
    return x

n = [3, 5, 7]
print list_function(n)

7.1.9
def list_function(x):
    return x[1]

n = [3, 5, 7]
print list_function(n)

7.1.10
def list_function(x):
    x[1] = x[1] + 3 
    return x

n = [3, 5, 7]
print list_function(n)

7.1.11
n = [3, 5, 7]
# Add your function here
def list_extender(lst):
    lst.append(9)
    return lst


print list_extender(n)

7.1.12

n = [3, 5, 7]

def print_list(x):
    for i in range(0, len(x)):
        print x[i]

print_list(n)
    

7.1.13

n = [3, 5, 7]

def double_list(x):
    for i in range(0, len(x)):
        x[i] = x[i] * 2
    return x
# Don't forget to return your new list!

print double_list(n)

7.1.14

def my_function(x):
    for i in range(0, len(x)):
        x[i] = x[i] * 2
    return x

print my_function(range(0, 3)) # Add your range between the parentheses!


7.1.15
n = [3, 5, 7]

def total(numbers):
    result = 0 
    for i in range(len(numbers)):
        result += numbers[i]
    return result


7.1.16
n = ["Michael", "Lieberman"]
# Add your function here

def join_strings(words):
    result = ""
    for i in range(len(words)):
        result = result + words[i]
    return result


print join_strings(n)


7.1.17
m = [1, 2, 3]
n = [4, 5, 6]

# Add your code here!
def join_lists(x, y):
    return x + y




print join_lists(m, n)
# You want this to print [1, 2, 3, 4, 5, 6]


7.1.18
n = [[1, 2, 3], [4, 5, 6, 7, 8, 9]]
# Add your function here

def flatten(lists):
    results = []
    for numbers in lists:
        print numbers
        for item in numbers:
            results.append(item)
    return results
 



print flatten(n)


7.2.1

None

7.2.2
board = []

7.2.3
board = []

for item in range(0,5):
    board.append(["O"] * 5)  

7.2.4
board = []

for item in range(0,5):
    board.append(["O"] * 5)
    
print board

7.2.5
board = []

for item in range(0,5):
    board.append(["O"] * 5)
    
def print_board(board):
    for row in board:
        print row

print_board(board)
    

7.2.6
board = []

for item in range(0,5):
    board.append(["O"] * 5)
    
def print_board(board):
    for row in board:
        print " ".join(row)

print_board(board)
    

7.2.7
from random import randint 

board = []

for x in range(0, 5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

# Add your code below!
def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board) - 1)
 
print random_row(board)
print random_col(board)


7.2.8
    from random import randint

board = []

for x in range(0,5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)

# Add your code below!
guess_row = int(raw_input("Guess Row:"))
guess_col = int(raw_input("Guess Col:"))


7.2.9
from random import randint

board = []

for x in range(0,5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)

# Add your code below!
guess_row = int(raw_input("Guess Row:"))
guess_col = int(raw_input("Guess Col:"))

print ship_col
print ship_row


7.2.10

from random import randint

board = []

for x in range(0, 5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
guess_row = int(raw_input("Guess Row:"))
guess_col = int(raw_input("Guess Col:"))

print ship_row
print ship_col

# Write your code below!
if guess_row == ship_row and guess_col == ship_col:
    print "Congratulations! You sank my battleship"

7.2.11
from random import randint

board = []

for x in range(0, 5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
guess_row = int(raw_input("Guess Row:"))
guess_col = int(raw_input("Guess Col:"))

print ship_row
print ship_col

# Write your code below!
if guess_row == ship_row and guess_col == ship_col:
    print "Congratulations! You sank my battleship"
else:
    print "You missed my battleship!"
    board[guess_row][guess_col] = "X"
    print_board(board)
    

7.2.12
from random import randint

board = []

for x in range(0, 5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
guess_row = int(raw_input("Guess Row:"))
guess_col = int(raw_input("Guess Col:"))

print ship_row
print ship_col

# Write your code below!
if guess_row == ship_row and guess_col == ship_col:
    print "Congratulations! You sank my battleship"
else:
    if guess_row not in range(5) or \
    guess_col not in range(5):
        print "Oops, that's not even in the ocean."
    else:
        print "You missed my battleship!"
        board[guess_row][guess_col] = "X"
        print_board(board)

    
7.2.13
from random import randint

board = []

for x in range(0, 5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
guess_row = int(raw_input("Guess Row:"))
guess_col = int(raw_input("Guess Col:"))

print ship_row
print ship_col

# Write your code below!
if guess_row == ship_row and guess_col == ship_col:
    print "Congratulations! You sank my battleship"
else:
    if guess_row not in range(5) or \
    guess_col not in range(5):
        print "Oops, that's not even in the ocean."
    elif board[guess_row][guess_col] == "X":
        print "You guessed that one already."
        print_board(board)
    else:
        print "You missed my battleship!"
        board[guess_row][guess_col] = "X"
        print_board(board)
    

7.2.14

from random import randint

board = []

for x in range(0, 5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
guess_row = int(raw_input("Guess Row:"))
guess_col = int(raw_input("Guess Col:"))

print ship_row
print ship_col

# Write your code below!
if guess_row == ship_row and guess_col == ship_col:
    print "Congratulations! You sank my battleship"
else:
    if guess_row not in range(5) or \
    guess_col not in range(5):
        print "Oops, that's not even in the ocean."
    elif board[guess_row][guess_col] == "X":
        print "You guessed that one already."
        print_board(board)
    else:
        print "You missed my battleship!"
        board[guess_row][guess_col] = "X"
        print_board(board)
    

7.2.15

from random import randint

board = []

for x in range(5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print "Let's play Battleship!"
print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
print ship_row
print ship_col

# Everything from here on should go in your for loop!
# Be sure to indent four spaces!
for turn in range(4):
    print "Turn", turn + 1
    guess_row = int(raw_input("Guess Row:"))
    guess_col = int(raw_input("Guess Col:"))
    
    if guess_row == ship_row and guess_col == ship_col:
        print "Congratulations! You sunk my battleship!"
    else:
        if (guess_row < 0 or guess_row > 4) or (guess_col < 0 or guess_col > 4):
            print "Oops, that's not even in the ocean."
        elif(board[guess_row][guess_col] == "X"):
            print "You guessed that one already."
        else:
            print "You missed my battleship!"
            board[guess_row][guess_col] = "X"
            print_board(board)

7.2.16
from random import randint

board = []

for x in range(5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print "Let's play Battleship!"
print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
print ship_row
print ship_col

# Everything from here on should go in your for loop!
# Be sure to indent four spaces!
for turn in range(4):
    print "Turn", turn + 1
    guess_row = int(raw_input("Guess Row:"))
    guess_col = int(raw_input("Guess Col:"))
    
    if guess_row == ship_row and guess_col == ship_col:
        print "Congratulations! You sunk my battleship!"
    else:
        if (guess_row < 0 or guess_row > 4) or (guess_col < 0 or guess_col > 4):
            print "Oops, that's not even in the ocean."
        elif(board[guess_row][guess_col] == "X"):
            print "You guessed that one already."
        else:
            if turn == 3:
                print "Game Over"
            else:
                print "You missed my battleship!"
                board[guess_row][guess_col] = "X"
                print_board(board)

7.2.17
from random import randint

board = []

for x in range(5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print "Let's play Battleship!"
print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
print ship_row
print ship_col

# Everything from here on should go in your for loop!
# Be sure to indent four spaces!
for turn in range(4):
    print "Turn", turn + 1
    guess_row = int(raw_input("Guess Row:"))
    guess_col = int(raw_input("Guess Col:"))
    
    if guess_row == ship_row and guess_col == ship_col:
        print "Congratulations! You sunk my battleship!"
        break
    else:
        if (guess_row < 0 or guess_row > 4) or (guess_col < 0 or guess_col > 4):
            print "Oops, that's not even in the ocean."
        elif(board[guess_row][guess_col] == "X"):
            print "You guessed that one already."
        else:
            if turn == 3:
                print "Game Over"
            else:
                print "You missed my battleship!"
                board[guess_row][guess_col] = "X"
                print_board(board)

7.2.18
from random import randint

board = []

for x in range(5):
    board.append(["O"] * 5)

def print_board(board):
    for row in board:
        print " ".join(row)

print "Let's play Battleship!"
print_board(board)

def random_row(board):
    return randint(0, len(board) - 1)

def random_col(board):
    return randint(0, len(board[0]) - 1)

ship_row = random_row(board)
ship_col = random_col(board)
print ship_row
print ship_col

# Everything from here on should go in your for loop!
# Be sure to indent four spaces!
for turn in range(4):
    print "Turn", turn + 1
    guess_row = int(raw_input("Guess Row:"))
    guess_col = int(raw_input("Guess Col:"))
    
    if guess_row == ship_row and guess_col == ship_col:
        print "Congratulations! You sunk my battleship!"
        break
    else:
        if (guess_row < 0 or guess_row > 4) or (guess_col < 0 or guess_col > 4):
            print "Oops, that's not even in the ocean."
        elif(board[guess_row][guess_col] == "X"):
            print "You guessed that one already."
        else:
            if turn == 3:
                print "Game Over"
            else:
                print "You missed my battleship!"
                board[guess_row][guess_col] = "X"
                print_board(board)


7.2.19

from random import randint

#board = []
board_large = []
board_small = []

player_one = {
    "name": "Player 1",
    "wins": 0,
    "loses": 0
    }

player_two = {
    "name": "Player 2",
    "wins": 0,
    "loses": 0
    }

total_turns = 0
win_state_change = 0

def build_board_large(board):
    """"Here we create a 5 x 5 board"""
    for item in range(5):
        board.append(["O"] * 5)

def build_board_small(board):
    """"Here we create a 3 x 3 board"""
    for item in range(3):
        board.append(["O"] * 3)

def print_board(board_one, board_two):
    """Here we make the lists look more like a simple battleship graph"""
    print "Board One"
    for row in board_one:
        print " ".join(row)
    
    print "Board Two"
    for row in board_two:
        print " ".join(row)

def load_game(board_one, board_two):
    """Here each time the players decide to play again, they start again from a fresh slate"""
    print "Let's play Battleship!"
    print "Turn 1"
    del board_one[:]
    del board_two[:]
    build_board_large(board_one)
    build_board_small(board_two)
    print_board(board_one, board_two)
    ship_row_large = randint(0, len(board_one) )
    ship_col_large = randint(0, len(board_one[0])  )
    ship_row_small = randint(0, len(board_two) )
    ship_col_small = randint(0, len(board_two[0]) )
    print "Board 1 ship row: " + str(ship_row_large)
    print "Board 1 ship column: " + str(ship_col_large)
    print "Board 2 ship row: " + str(ship_row_small)
    print "Board 2 ship column: " + str(ship_col_small)
    return {
        "ship_row_large": ship_row_large,
        "ship_col_large": ship_col_large,
        "ship_row_small": ship_row_small,
        "ship_col_small": ship_col_small,
        }

#Here we assign the new ship locations to the new dictionary
ship_points = load_game(board_large, board_small)
    
#Here we alternate between player turns by checking for odd numbers
def player_turns():
    if total_turns % 2 == 0:
        return player_two
    else:
        return player_one

#Here we aske the user if s/he wants to play again, restart or reload the game
def play_again():
    global total_turns
    global ship_points
    answer = str(raw_input("Would you like to play again?"))
    if answer == "yes":
        total_turns = 0 #Here we reset or start over from player one again
        print_board(board_large, board_small)
        ship_points = load_game(board_large, board_small)
    else:
        exit()

#Here we check the game statistics
def best_out_of(win_state, player):
    global total_turns
    if win_state == 1 and player["wins"] < 2:
        #Here we only do a check if player one is in the current game
        print "%s wins this game!" % (player["name"])
        play_again()
    elif win_state == 0 and total_turns == 6:
        print "This match was a draw"
        play_again()
    elif win_state != 0 and total_turns == 6:
        play_again()
    elif player["wins"] >= 2: #Here we check who won best out of 3
        print "%s wins best out of 3" % (player["name"])
        play_again()
    elif player["lose"] >= 2:
        print "%s lost best out of 3" % (player["name"])
        play_again()
    else:
        play_again()
    
    
def input_check(ship_row, ship_col, player, board):
    #Here we check the player-s guesses of the ship points
    global win_state_change
    guess_row = 0
    guess_col = 0
    while True:
        try:
            guess_row = int(raw_input("Guess Row:")) 
            guess_col = int(raw_input("Guess Column:"))
        except ValueError:
            print "Enter a number only."
            continue
        else:
            break
    match = guess_row == ship_row and guess_col == ship_col
    not_on_small_board = (guess_row < 0 or guess_row > 2) or (guess_col < 0 or guess_col > 2)
    not_on_large_board = (guess_row < 0 or guess_row > 4) or (guess_col < 0 or guess_col > 4)
     
    if match:
         win_state_change = 1 #Here we note that someone has won the current game
         player["wins"] += 1
         print "Congratulations! You sunk my battleship!"
         best_out_of(win_state_change, player)
    elif not match and player == player_two: #Here we check the current player and then correlate with the correct board size
        if not_on_small_board:
            print "Oops, that's not even in the ocean."
        elif board[guess_row][guess_col] == "X":
            print "You guessed that one already."
        else:
            print "You missed my battleship!"
            board[guess_row][guess_col] = "X"
        win_state_change = 0
        print_board(board_large, board_small)
    elif not match and player == player_one:
        if not_on_large_board:
            print "Oops, that's not even in the ocean."
        elif board[guess_row][guess_col] == "X":
            print "You guessed that one already."
        else:
            print "You missed my battleship!"
            board[guess_row][guess_col] = "X"
        win_state_change = 0
        print_board(board_large, board_small)
    else:
        return win_state_change
        

#Here we start the game logic
for games in range(3):
    games += 1 #Here we have 3 games in total
    for turns in range(6): #Here we have 6 turns in total, where we have 3 turns for each player
        total_turns += 1
        if player_turns() ==  player_one:
            print "It's player 1's turn"
            input_check(
                ship_points['ship_row_large'],
                ship_points['ship_col_large'],
                player_one, board_large
                )
        elif player_turns() == player_two:
            print "It's player 2's turn"
            input_check(
                ship_points['ship_row_small'],
                ship_points['ship_col_small'],
                player_two, board_small
                )
        else:
            break
        
        if total_turns == 6 and player_turns() == player_one:
            best_out_of(win_state_change, player_one)
        elif total_turns == 6 and player_turns() == player_two:
            best_out_of(win_state_change, player_two)
        else:
            continue
    
    if games == 3:
        print "The game has ended."
        #print "Wins: %s" % (player_one[entry])
        exit()
    else:
        continue

"""
for x in range(5):
    board.append(["O"] * 5)
"""

"""
def print_board(board):
    for row in board:
        print " ".join(row)
"""

#print "Let's play Battleship!"
#print_board(board)

"""
def random_row(board):
    return randint(0, len(board) - 1)
"""

"""
def random_col(board):
    return randint(0, len(board[0]) - 1)
"""

#ship_row = random_row(board)
#ship_col = random_col(board)
#print ship_row
#print ship_col

# Everything from here on should go in your for loop!
# Be sure to indent four spaces!
"""
for turn in range(4):
    print "Turn", turn + 1
    guess_row = int(raw_input("Guess Row:"))
    guess_col = int(raw_input("Guess Col:"))
    
    if guess_row == ship_row and guess_col == ship_col:
        print "Congratulations! You sunk my battleship!"
        break
    else:
        if (guess_row < 0 or guess_row > 4) or (guess_col < 0 or guess_col > 4):
            print "Oops, that's not even in the ocean."
        elif(board[guess_row][guess_col] == "X"):
            print "You guessed that one already."
        else:
            if turn == 3:
                print "Game Over"
            else:
                print "You missed my battleship!"
                board[guess_row][guess_col] = "X"
                print_board(board)
"""